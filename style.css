/*
 * Simple styling for the King&#39;s Cup party game.
 * This CSS keeps the layout clean and readable without
 * providing any specific branding or art direction. You can
 * customise colours and fonts later when refining the UI.
 */

body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 1rem;
  background: #f7f7f9;
  color: #333;
  text-align: center;
}

h1 {
  margin-bottom: 1rem;
}

#setup {
  margin-bottom: 2rem;
}

label {
  margin-right: 0.5rem;
}

input[type="number"] {
  width: 3rem;
  padding: 0.25rem;
  margin-right: 0.5rem;
}

button {
  padding: 0.5rem 1rem;
  margin: 0.5rem;
  border: none;
  border-radius: 4px;
  background-color: #007bff;
  color: #fff;
  cursor: pointer;
  font-size: 1rem;
}

button:hover {
  background-color: #0056b3;
}

#warning {
  font-size: 0.9rem;
  color: #555;
  max-width: 600px;
  margin: 1rem auto;
}

#game {
  max-width: 600px;
  margin: 0 auto;
  border-top: 1px solid #ddd;
  padding-top: 1rem;
}

#cardArea {
  margin: 1rem auto;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150px;
  width: 100%;
}

/* Card styling */
.card-back,
.card-front {
  width: 100px;
  height: 140px;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  font-weight: bold;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  user-select: none;
}

/* The deck represents the stack of cards to draw from. It has the same
   dimensions as a single card but is styled to look like a stack. */
#deck.card-back {
  position: relative;
  cursor: pointer;
  /* Stacked appearance using multiple shadows */
  box-shadow:
    0px 2px 0px 0px #d0d0d0,
    0px 4px 0px 0px #c0c0c0,
    0px 6px 0px 0px #b0b0b0,
    0px 8px 0px 0px #a0a0a0;
  transition: transform 0.1s ease;
}

#deck.card-back:hover {
  transform: translateY(-2px);
}

/* Story text below the card */
#storyDisplay {
  margin-top: 0.5rem;
  font-size: 0.9rem;
  line-height: 1.4;
  color: #555;
  min-height: 40px;
  max-width: 300px;
  margin-left: auto;
  margin-right: auto;
}

/* Custom animations for specific card types. These animations augment
   the generic card classes with movement, rotation or scaling to
   reinforce the theme of each card. */
.waterfall-animation {
  animation: waterfall 1s ease-in-out forwards;
}

.choose-animation {
  animation: choose 0.6s ease-out forwards;
}

.me-animation {
  animation: meBounce 0.6s ease-in-out forwards;
}

.floor-animation {
  animation: floorFall 0.6s ease-in forwards;
}

.guys-animation {
  animation: guysZoom 0.6s ease-in forwards;
}

.girls-animation {
  animation: girlsZoom 0.6s ease-in forwards;
}

.heaven-animation {
  animation: heavenRise 0.7s ease-out forwards;
}

.mate-animation {
  animation: mateHeart 0.8s ease-in-out forwards;
}

.rhyme-animation {
  animation: rhymeSpin 0.8s ease-in-out forwards;
}

.category-animation {
  animation: categorySwing 0.8s ease-in-out forwards;
}

.rule-animation {
  animation: ruleFlash 0.6s ease-in-out forwards;
}

.question-animation {
  animation: questionWiggle 0.8s ease-in-out forwards;
}

.king-animation {
  animation: kingShake 0.8s ease-in-out forwards;
}

/* Keyframes for custom animations */
@keyframes waterfall {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 0% 100%;
  }
}

@keyframes choose {
  0% {
    transform: translateX(-120px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes meBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-12px);
  }
  60% {
    transform: translateY(-6px);
  }
}

@keyframes floorFall {
  0% {
    transform: translateY(-150px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes guysZoom {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes girlsZoom {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes heavenRise {
  0% {
    transform: translateY(100px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes mateHeart {
  0% {
    transform: scale(0.8);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes rhymeSpin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes categorySwing {
  0% {
    transform: rotate(-10deg);
  }
  50% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

@keyframes ruleFlash {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

@keyframes questionWiggle {
  0% {
    transform: rotate(-5deg);
  }
  50% {
    transform: rotate(5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

@keyframes kingShake {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  50% {
    transform: translateX(5px);
  }
  75% {
    transform: translateX(-5px);
  }
}

.card-back {
  background: #e0e0e0;
  border: 2px solid #bbb;
}

.card-front {
  background: #fff;
  border: 2px solid #000;
}

/* Animation classes for card draws */
/* Each animation is designed to draw attention to the card in different ways. */
.flip-animation {
  /* flip around the Y axis */
  animation: flip 0.6s ease-in-out forwards;
  transform-style: preserve-3d;
}

.slide-animation {
  /* slide the card in from the left */
  animation: slideIn 0.6s ease-out forwards;
}

.bounce-animation {
  /* bounce the card vertically */
  animation: bounce 0.8s ease-in-out forwards;
}

.fade-animation {
  /* fade the card into view */
  animation: fadeIn 0.6s ease-in forwards;
}

.zoom-animation {
  /* zoom the card up from nothing */
  animation: zoomIn 0.6s ease-in forwards;
}

.rotate-animation {
  /* rotate the card into view */
  animation: rotateIn 0.8s ease-in-out forwards;
}

/* Keyframes definitions for card animations */
@keyframes flip {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

@keyframes slideIn {
  0% {
    transform: translateX(-150px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-15px);
  }
  60% {
    transform: translateY(-7px);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes zoomIn {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes rotateIn {
  0% {
    transform: rotate(-360deg);
    opacity: 0;
  }
  100% {
    transform: rotate(0deg);
    opacity: 1;
  }
}

#ruleDisplay {
  margin-top: 1rem;
  font-size: 1.1rem;
  line-height: 1.4;
  min-height: 60px;
}

#currentPlayer {
  font-weight: bold;
  margin-bottom: 1rem;
}